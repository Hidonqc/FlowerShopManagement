package FlowerShop.MainFrame.Staff;

import FlowerShop.Controller.Service.ServiceStaff;
import FlowerShop.Model.*;

import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class StaffView {
    private final Scanner scanner = new Scanner(System.in);
    private final ServiceStaff staffService = new ServiceStaff();
    private int currentOrderId = -1;

    public void showStaffMenu(int staffId) {
        while (true) {
            System.out.println("\nüå∫üå∫üå∫ MENU NH√ÇN VI√äN üå∫üå∫üå∫");
            System.out.println("1. Th√™m s·∫£n ph·∫©m v√†o kho");
            System.out.println("2. T·∫°o ƒë∆°n h√†ng m·ªõi");
            System.out.println("3. Xem chi ti·∫øt ƒë∆°n h√†ng");
            System.out.println("4. T√¨m kh√°ch h√†ng");
            System.out.println("5. Th√¥ng tin c√° nh√¢n");
            System.out.println("6. ƒêƒÉng xu·∫•t");
            System.out.print("‚û°Ô∏è Ch·ªçn: ");

            try {
                int choice = scanner.nextInt();
                scanner.nextLine(); // Clear buffer

                switch (choice) {
                    case 1 -> addProductToStock();
                    case 2 -> createNewOrder(staffId);
                    case 3 -> showOrderDetails();
                    case 4 -> findCustomer();
                    case 5 -> showStaffInfo(staffId);
                    case 6 -> { return; }
                    default -> System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
                }
            } catch (Exception e) {
                scanner.nextLine(); // Clear invalid input
            }
        }
    }

    // ==================== QU·∫¢N L√ù S·∫¢N PH·∫®M ====================
    private void addProductToStock() {
        try {
            ModelProduct product = new ModelProduct();
            System.out.println("\nüì¶ NH·∫¨P H√ÄNG M·ªöI");

            System.out.print("T√™n hoa: ");
            product.setProductName(scanner.nextLine());

            System.out.print("Lo·∫°i: ");
            product.setType(scanner.nextLine());

            System.out.print("M√πa: ");
            product.setSeason(scanner.nextLine());

            System.out.print("Gi√°: ");
            product.setPrice(scanner.nextInt());

            System.out.print("S·ªë l∆∞·ª£ng: ");
            product.setStock(scanner.nextInt());
            scanner.nextLine(); // Clear buffer

            if (staffService.addProductToInventory(product)) {
                System.out.println("‚úÖ Nh·∫≠p kho th√†nh c√¥ng!");
            }
        } catch (SQLException e) {
            System.out.println("‚ùó L·ªói th√™m s·∫£n ph·∫©m: " + e.getMessage());
        }
    }

    // ==================== QU·∫¢N L√ù ƒê∆†N H√ÄNG ====================
    private void createNewOrder(int staffId) {
        try {
            System.out.println("\nüõí T·∫†O ƒê∆†N H√ÄNG M·ªöI");
            System.out.print("Nh·∫≠p ID kh√°ch h√†ng: ");
            int customerId = scanner.nextInt();
            scanner.nextLine(); // Clear buffer

            currentOrderId = staffService.createOrder(customerId, staffId);
            System.out.println("üìÑ M√£ ƒë∆°n h√†ng: " + currentOrderId);

            while (true) {
                System.out.print("\nNh·∫≠p ID s·∫£n ph·∫©m (0 ƒë·ªÉ k·∫øt th√∫c): ");
                int productId = scanner.nextInt();
                if (productId == 0) break;

                System.out.print("S·ªë l∆∞·ª£ng: ");
                int quantity = scanner.nextInt();
                scanner.nextLine(); // Clear buffer

                try {
                    staffService.addOrderDetail(currentOrderId, productId, quantity);
                    System.out.println("‚ûï ƒê√£ th√™m v√†o ƒë∆°n h√†ng!");
                } catch (ServiceStaff.InsufficientStockException e) {
                    System.out.println("‚ö†Ô∏è C·∫£nh b√°o: " + e.getMessage());
                }
            }
        } catch (SQLException e) {
            System.out.println("‚ùó L·ªói t·∫°o ƒë∆°n h√†ng: " + e.getMessage());
        }
    }

    private void showOrderDetails() {
        try {
            System.out.print("\nNh·∫≠p m√£ ƒë∆°n h√†ng: ");
            int orderId = scanner.nextInt();
            scanner.nextLine(); // Clear buffer

            List<ModelOrderDetails> details = staffService.getOrderDetails(orderId);

            System.out.println("\nüìã CHI TI·∫æT ƒê∆†N H√ÄNG #" + orderId);
            System.out.printf("%-5s | %-20s | %-10s | %-15s\n",
                    "STT", "T√™n s·∫£n ph·∫©m", "S·ªë l∆∞·ª£ng", "Th√†nh ti·ªÅn");

            for (int i = 0; i < details.size(); i++) {
                ModelOrderDetails detail = details.get(i);
                System.out.printf("%-5d | %-20s | %-10d | %,-15.2f VND\n",
                        i + 1,
                        detail.getproduct_ID(),
                        detail.getquantity(),
                        detail.gettotal() * detail.getquantity()
                );
            }
        } catch (SQLException e) {
            System.out.println("‚ùó L·ªói hi·ªÉn th·ªã ƒë∆°n h√†ng: " + e.getMessage());
        }
    }

    // ==================== QU·∫¢N L√ù KH√ÅCH H√ÄNG ====================
    private void findCustomer() {
        try {
            System.out.print("\nNh·∫≠p ID kh√°ch h√†ng: ");
            int customerId = scanner.nextInt();
            scanner.nextLine(); // Clear buffer

            ModelCustomers customer = staffService.getCustomerName(customerId);

            System.out.println("\nüë§ TH√îNG TIN KH√ÅCH H√ÄNG");
            System.out.println("ID: " + customer.getCustomer_ID());
            System.out.println("T√™n: " + customer.getCustomer_Name());
            System.out.println("Ng√†y tham gia: " + customer.getJoinDate());
        } catch (SQLException e) {
            System.out.println("‚ùó L·ªói t√¨m kh√°ch h√†ng: " + e.getMessage());
        }
    }

    // ==================== TH√îNG TIN C√Å NH√ÇN ====================
    private void showStaffInfo(int staffId) {
        try {
            ModelStaff staff = staffService.getStaffInfo(staffId);

            System.out.println("\nüëî TH√îNG TIN C√Å NH√ÇN");
            System.out.println("ID: " + staff.getID_Staff());
            System.out.println("H·ªç t√™n: " + staff.getNameStaff());
            System.out.println("Ng√†y v√†o l√†m: " + staff.getJoinDate());
            System.out.println("SƒêT: " + staff.getPhoneNumber());
            System.out.println("Vai tr√≤: " + staff.getRole());
            System.out.println("ID_Manager: " + staff.getID_Manager());


        } catch (SQLException e) {
            System.out.println("‚ùó L·ªói hi·ªÉn th·ªã th√¥ng tin: " + e.getMessage());
        }
    }
}